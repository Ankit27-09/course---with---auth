const express = require("express");
const {Admin, Course, User} = require("../db/index")
const  adminMiddleware = require("../middlewares/adminMiddleware");
const jwt = require("jsonwebtoken");
const { JWT_SECRET } = require("../config");

const app = express();

app.use(express.json());
const router = express.Router();

// first we have to write the logic for the admin signup 
router.post("/signup", async (req, res) => {
    const { username, password } = req.body;

    try {

        // Create new admin
        await Admin.create({ username, password });
        res.status(201).json({ message: "Admin created successfully" });

    } catch (err) {
        console.error("Error in creating admin:", err);
        res.status(500).json({ message: "Internal server error" });
    }
});

// Signin logic
router.post("/signin", async(req, res) => {
    // implement the admin signin logic
    const {username, password} = req.body;
    const user = await User.find({
        username,
        password,
    });

    if(user) {
        const token = jwt.sign({
            username
        }, JWT_SECRET);
        res.json({
            token
        })
    }
    else {
        res.status(411).json({
            message: "Incorrect email and password",
        })
    }
    
})

// Now the Post route for the creating the course generated by the admin
router.post("/courses", adminMiddleware, async(req, res) => {
    const {title, description, imageLink, price} = req.body;
    try {
        const newCourse = await Course.create({
            title: title,
            description: description,
            imageLink: imageLink,
            price: price,
        })

        res.json({message: "Admin created the courses"});
    }
    catch(err) {
        res.status(401).json("Error in creating the courses");
    }
   
});

router.get("/courses", adminMiddleware, async(req, res) => {
    const course = await Course.find({});
    res.json(course)
});

module.exports = {
    adminRoutes: router
};